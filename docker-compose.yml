services:
  php:
    build:
      context: .
      dockerfile: php/Dockerfile
    image: 990921093/php:1.0
    container_name: php
    ports:
      - "9000:9000"   # php-fpm 服务端口（内部供 nginx 反向代理调用）
      - "9501:9501"   # swoole 服务端口
    volumes:
      - ${SRC_PATH}:/var/www
    depends_on:
      - redis
      - mysql
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "8000-8499:8000-8499"
    volumes:
      - ${SRC_PATH}:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - php
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ${DATA_PATH}/redis:/data
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --appendonly ${REDIS_APPEND_ONLY}
    networks:
      - app-network

  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - ${DATA_PATH}/mongo:/data/db
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ${DATA_PATH}/mysql:/var/lib/mysql
    networks:
      - app-network

  consul:
    image: consul:1.15
    container_name: consul
    ports:
      - "${CONSUL_PORT}:8500"
      - "${CONSUL_UDP_PORT}:8600/udp"
    command: "agent -dev -client=0.0.0.0"
    networks:
      - app-network
  go:
    build:
      context: ./go   # 注意，这里是放 Dockerfile 的地方，不是你本地源码
      dockerfile: Dockerfile
    image: 990921093/go-work:1.0
    container_name: go
    ports:
      - "3000:3000"
    volumes:
      - ${GO_PATH}:/go
    depends_on:
      - redis
      - mongo
      - mysql
      - consul
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
